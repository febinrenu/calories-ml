name: ML Pipeline - Train, Test & Deploy

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  train-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Train models
      run: |
        echo "Training machine learning models..."
        python train_model.py
    
    - name: Run tests
      run: |
        echo "Running unit tests..."
        pytest test_model.py -v --tb=short
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: trained-models
        path: |
          models/*.pkl
          models/*.json
        retention-days: 30
    
    - name: Display model metrics
      run: |
        echo "=== Model Training Results ==="
        cat models/metrics.json
  
  build-docker:
    needs: train-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download trained models
      uses: actions/download-artifact@v4
      with:
        name: trained-models
        path: models/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      if: github.event_name == 'push'
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name == 'push' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/calories-predictor:latest
          ${{ secrets.DOCKER_USERNAME }}/calories-predictor:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/calories-predictor:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/calories-predictor:buildcache,mode=max
    
    - name: Image digest
      run: echo "Image pushed successfully!"
  
  deploy-notification:
    needs: build-docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
    - name: Deployment notification
      run: |
        echo "‚úÖ Pipeline completed successfully!"
        echo "üê≥ Docker image built and pushed"
        echo "üöÄ Ready for deployment to Render"
        echo ""
        echo "To deploy on Render:"
        echo "1. Connect your repository to Render"
        echo "2. Create a new Web Service"
        echo "3. Set Build Command: pip install -r requirements.txt && python train_model.py"
        echo "4. Set Start Command: uvicorn app:app --host 0.0.0.0 --port $PORT"
